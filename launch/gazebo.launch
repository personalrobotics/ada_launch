<launch>
  <!-- Gazebo only section -->
  <rosparam file="$(find ada_launch)/config/gazebo.yaml" command="load" ns="gazebo_ros_control"/>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <param name="robot_description"
        command="cat $(find ada_description)/robots_urdf/ada_gazebo.urdf" />
  <node name="robot_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-x 0 -y 0 -z 2 -R 0 -P 0 -Y 0
        -unpause -urdf -model robot -param robot_description"
        respawn="false" output="screen" />

<!-- args="-x 0.7 -y -0.1 -z -0.25 -R 0 -P 0 -Y 3.1415 -->
  <param name="wheelchair_description"
        command="cat $(find pr_assets)/data/furniture/wheelchair.urdf" />
  <node name="wheelchair_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-x 0 -y 0 -z 0.005 -R 0 -P 0 -Y 0
        -unpause -urdf -model wheelchair -param wheelchair_description"
        respawn="false" output="screen" />

  <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>

   <!-- ADA Section -->

  <arg name="feeding" default="false" doc="Boolean flag of whether to set up the robot for the feeding demo"/>

   <!-- Not used yet, but we'll need this to support a more complex hardware interface
   <node pkg="jaco_simulation"
          name="ros_control_jaco_simulation"
          type="jaco_simulation"
          output="screen" />
    -->

   <!-- load controllers -->
   <rosparam file="$(find ada_launch)/config/controllers.yaml" command="load" />

   <node name="controller_spawner_started" pkg="controller_manager" type="spawner" respawn="false"
      output="screen"
      args="
         joint_state_controller
         " />
   <node name="controller_spawner_stopped" pkg="controller_manager" type="spawner" respawn="false"
      output="screen"
      args="
         --stopped
         move_until_touch_topic_controller
         trajectory_controller
         rewd_trajectory_controller
         j2n6s200_hand_controller
         " />

   <node pkg="robot_state_publisher" type="robot_state_publisher" name="rob_st_pub" />

   <node name="st_map2world" pkg="tf" type="static_transform_publisher" respawn="false" output="screen"
      args="0 0 0 0 0 0 1 map world 10"/>

</launch>
